{"version":3,"file":"5.0a52b7fceb5606b50d56.hot-update.js","sources":["webpack:///components/Pricing/index.js"],"sourcesContent":["// Components\nimport React, { Component } from 'react'\nimport Slider from 'rc-slider/lib/Slider';\n\n// CSS\nimport { primaryColor, darkTextColor } from '../../styles/variables'\nimport sections from '../../styles/sections'\nimport grid from '../../styles/grid'\nimport button from '../../styles/button'\nimport pricing from '../../styles/pricing'\nimport 'rc-slider/assets/index.css';\n\n\nconst imageRewardPrice = 500;\nconst videoRewardPrice = 1000;\nconst animationRewardPrice = 2000;\n\nexport default class PricingComponent extends Component {\n\n  constructor (props) {\n    super(props)\n\n    let imageRanges = {}\n    let videoRanges = {\n      0: 0,\n      5: {\n        label: 5,\n        style: { color: primaryColor }\n      },\n      15: {\n        label: 15,\n        style: { color: primaryColor }\n      }\n    }\n\n    for (let i = 0; i < 31; i++) {\n      if (i % 5 !== 0) {\n        continue\n      }\n\n      imageRanges[i] = {\n        label: i,\n        style: {\n          color: darkTextColor\n        }\n      }\n\n      if (i === 5 || i == 15 || i == 30) {\n        imageRanges[i].style = {\n          color: primaryColor,\n          fontWeight: 'bold'\n        }\n      }\n    }\n\n    this.state = {\n      sliders: {\n        images: 2,\n        videos: 1,\n        animations: 1\n      },\n      ranges: {\n        images: imageRanges,\n        videos: videoRanges,\n        animations: Object.assign({}, videoRanges)\n      }\n    }\n  }\n  componentDidMount () {\n  }\n\n  componentWillUnMount () {\n  }\n\n  onSliderChange (type) {\n    return (value) => {\n      this.setState({\n        sliders: {\n          ...this.state.sliders,\n          [type]: value\n        }\n      })\n    }\n  }\n\n  pricePerCreative (type) {\n    let { sliders } = this.state\n\n    switch (type) {\n      case 'images':\n        if (sliders.images == 0) return 0;\n        else if (sliders.images < 5) return 75;\n        else if (sliders.images < 15) return 71.25;\n        else if (sliders.images < 30) return 69;\n        else if (sliders.images >= 30) return 67.50;\n      case 'videos':\n        if (sliders.videos == 0) return 0;\n        else if (sliders.videos < 5) return 600\n        else if (sliders.videos < 15) return 570\n        else if (sliders.videos >= 15) return 540\n      case 'animations':\n        if (sliders.animations == 0) return 0;\n        else if (sliders.animations < 5) return 1800\n        else if (sliders.animations < 15) return 1710\n        else if (sliders.animations >= 15) return 1620\n\n      default: return 0;\n    }\n  }\n\n  monthlyPrice () {\n    const { sliders } = this.state\n    let imagePrice = sliders.images * this.pricePerCreative('images');\n    let videoPrice = sliders.videos * this.pricePerCreative('videos')\n    let animationsPrice = sliders.animations * this.pricePerCreative('animations')\n\n    return (imagePrice + videoPrice + animationsPrice)\n  }\n\n  maxRewardPrice () {\n    const { sliders } = this.state\n    let imagePrice = sliders.images * imageRewardPrice;\n    let videoPrice = sliders.videos * videoRewardPrice;\n    let animationPrice = sliders.animations * animationRewardPrice;\n\n    return (imagePrice + videoPrice + animationPrice)\n  }\n\n  render() {\n    const { sliders, ranges } = this.state\n\n    return (\n      <section id='pricing'>\n        <div className='container'>\n          <h2>Pricing</h2>\n          <h3 className='lead'>\n            Choose how many assets you need each month, pay a <u>small monthly price</u> and <u><b>pay out a reward when each creative actually performs</b></u>.</h3>\n          <h3 className='lead'>Rewards help the creators learn when their work performs – it's the perfect feedback loop.</h3>\n        </div>\n\n        <div className='pricing'>\n          <div className='container'>\n            <div className='grid'>\n              <div className='col-2'></div>\n              <div className='col-5'></div>\n              <div className='col-1 price-header'># of Creatives</div>\n              <div className='col-1 price-header'>Price / Creative<br/>(monthly)</div>\n              <div className='col-1 price-header'>Max Reward<br />(for performance)</div>\n            </div>\n\n            <div className='grid pricing-model'>\n              <div className='col-2'>\n                <h3 className='plan-name'>Static-Image Ads</h3>\n                <p className='secondary-lead'>Image ads, story or carousel ads optimzied for conversion for all major platforms.</p>\n              </div>\n              <div className='col-5 slider-container'>\n                <Slider\n                  min={0}\n                  max={30}\n                  marks={ranges.images}\n                  value={sliders.images}\n                  onChange={this.onSliderChange('images')}\n                />\n\n\n                <div className='grid' style={{display: 'none'}}>\n                  <div className='what-you-get col-flex'>\n                    <h4>You provide:</h4>\n                    <p>x Any creative direction, brand guidelines, or restrictions.</p>\n                    <p>x Any internal assets you'd like used.</p>\n                    <p>x Information about specific audience that each creative will be used for.</p>\n                  </div>\n                  <div className='what-you-get col-flex'>\n                    <h4>You'll receive:</h4>\n                    {sliders.images > 0 ? (\n                      <div>\n                        <p>x Unlimited revisions.</p>\n                        <p>x Automatic asset uploads to Facebook, Instagram, LinkedIn, and Twitter post-approval.</p>\n                        <p>x {sliders.images} unique set(s) of creatives for any ad unit.</p>\n                      </div>\n                    ) : (\n                      <p>Well, nothing. Obviously.</p>\n                    )}\n                  </div>\n                </div>\n\n              </div>\n              <div className='col-1 price'>{sliders.images}x</div>\n              <div className='col-1 price'>{this.pricePerCreative('images').toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</div>\n              <div className='col-1 price'>{imageRewardPrice.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</div>\n            </div>\n\n            <div className='grid pricing-model'>\n              <div className='col-2'>\n                <h3 className='plan-name'>Video Ad Edits</h3>\n                <p className='secondary-lead'>Video ads, cut from raw-footage you provide, optomized for conversion.</p>\n              </div>\n              <div className='col-5 slider-container'>\n                <Slider\n                  min={0}\n                  max={15}\n                  marks={ranges.videos}\n                  value={sliders.videos}\n                  onChange={this.onSliderChange('videos')}\n                />\n\n\n                <div className='grid' style={{display: 'none'}}>\n                  <div className='what-you-get col-flex'>\n                    <h4>You provide:</h4>\n                    <p>x Any creative direction, brand guidelines, or restrictions.</p>\n                    <p>x Any internal assets you'd like used.</p>\n                    <p>x Information about specific audience that each creative will be used for.</p>\n                  </div>\n                  <div className='what-you-get col-flex'>\n                    <h4>You'll receive:</h4>\n                    {sliders.videos > 0 ? (\n                      <div>\n                        <p>x Unlimited revisions.</p>\n                        <p>x Automatic asset uploads to Facebook, Instagram, LinkedIn, and Twitter post-approval.</p>\n                        <p>x {sliders.videos} unique set(s) of creatives for any ad unit.</p>\n                      </div>\n                    ) : (\n                      <p>Well, nothing. Obviously.</p>\n                    )}\n                  </div>\n                </div>\n\n              </div>\n              <div className='col-1 price'>{sliders.videos}x</div>\n              <div className='col-1 price'>{this.pricePerCreative('videos').toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</div>\n              <div className='col-1 price'>{videoRewardPrice.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</div>\n            </div>\n\n            <div className='grid pricing-model'>\n              <div className='col-2'>\n                <h3 className='plan-name'>Animated Ads</h3>\n                <p className='secondary-lead'>Animations (videos), uniquely produced and optimized for conversion. All major platforms supported.</p>\n              </div>\n              <div className='col-5 slider-container'>\n                <Slider\n                  min={0}\n                  max={15}\n                  marks={ranges.animations}\n                  value={sliders.animations}\n                  onChange={this.onSliderChange('animations')}\n                />\n\n\n                <div className='grid' style={{display: 'none'}}>\n                  <div className='what-you-get col-flex'>\n                    <h4>You provide:</h4>\n                    <p>x Any creative direction, brand guidelines, or restrictions.</p>\n                    <p>x Any internal assets you'd like used.</p>\n                    <p>x Information about specific audience that each creative will be used for.</p>\n                  </div>\n                  <div className='what-you-get col-flex'>\n                    <h4>You'll receive:</h4>\n                    {sliders.animations > 0 ? (\n                      <div>\n                        <p>x Unlimited revisions.</p>\n                        <p>x Automatic asset uploads to Facebook, Instagram, LinkedIn, and Twitter post-approval.</p>\n                        <p>x {sliders.animations} unique set(s) of creatives for any ad unit.</p>\n                      </div>\n                    ) : (\n                      <p>Well, nothing. Obviously.</p>\n                    )}\n                  </div>\n                </div>\n\n              </div>\n              <div className='col-1 price'>{sliders.animations}x</div>\n              <div className='col-1 price'>{this.pricePerCreative('animations').toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</div>\n              <div className='col-1 price'>{animationRewardPrice.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</div>\n            </div>\n\n\n            <div className='grid sub-total sub-total-header'>\n              <div className='col-flex plan-name'>\n                Total\n              </div>\n            </div>\n            <div className='grid sub-total'>\n              <div className='col-2'>&nbsp;</div>\n              <div className='col-2'>\n                <h3 className='plan-name'>Monthly Price</h3>\n              </div>\n              <div className='col-1 price'>\n                {this.monthlyPrice().toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n              </div>\n              <div className='col-3 description'>\n                <p>Charged on a monthly basis, this covers the cost of production for our creators.</p>\n              </div>\n              <div className='col-2'>&nbsp;</div>\n            </div>\n\n            <div className='grid sub-total'>\n              <div className='col-2'>&nbsp;</div>\n              <div className='col-2'>\n                <h3 className='plan-name'>Maximum Reward</h3>\n              </div>\n              <div className='col-1 price'>\n                {this.maxRewardPrice().toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n              </div>\n              <div className='col-3 description'>\n                <p>Maximum reward, charged as 2% of ad-spend on creative our creators have produced and you've approved.</p>\n              </div>\n              <div className='col-2'>&nbsp;</div>\n            </div>\n\n            <div className='btn-container'>\n              <a className=\"typeform-share btn primary\" href='https://paidgrowth.typeform.com/to/wxdzCL' data-mode=\"popup\" data-hide-headers='true' data-hide-footer='true' target=\"_blank\">Get Started</a>\n            </div>\n\n          </div>\n        </div>\n\n        {/* <div className='pricing'>\n          <div className='container'>\n            <h3 className='plan-name'>Static-Image Ads</h3>\n            <div className='grid'>\n              <div className='col-flex'>\n                <div className='what-you-get'>\n                  <h4>You provide:</h4>\n                  <p>x Any creative direction, brand guidelines, or restrictions.</p>\n                  <p>x Any internal assets you'd like used.</p>\n                  <p>x Information about specific audience that the creative will be used for.</p>\n                  <h4>You'll receive:</h4>\n                  <p>x 2 unique sets of creatives for any ad unit.</p>\n                  <p>x 3 variations of copy to use. (if ordered)</p>\n                </div>\n              </div>\n              <div className='col-flex'>\n                <div className='what-you-pay'>\n                  <p><span className='price main'>$150</span></p>\n                  <p>\n                    Plus <span className='price'>%2</span> of ad-spend on the ads you receive from us, upto ${imageRewardPrice}.\n                    <br />\n                    Add <span className='price'>$50</span> if you need copywriting.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n        {/* <div className='pricing'>\n          <div className='container'>\n            <h3 className='plan-name'>Video Ad Edits</h3>\n            <div className='grid'>\n              <div className='col-flex'>\n                <div className='what-you-get'>\n                  <h4>You provide:</h4>\n                  <p>x Raw footage of shoots you've done that are related to the ad.</p>\n                  <p>x Any creative direction, brand guidelines, or restrictions.</p>\n                  <p>x Any soundtrack you'd like to use.</p>\n                  <p>x Information about specific audience that the creative will be used for.</p>\n                  <h4>You'll receive:</h4>\n                  <p>x Edited video ad based off of raw footage provided.</p>\n                  <p>x Music layered for video. (if ordered)</p>\n                </div>\n              </div>\n              <div className='col-flex'>\n                <div className='what-you-pay'>\n                  <p><span className='price main'>$600</span></p>\n                  <p>\n                    Plus <span className='price'>%2</span> of ad-spend on the ads you receive from us, upto ${videoRewardPrice}.\n                    <br />\n                    Add <span className='price'>${videoRewardPrice}</span> if you need music.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n        {/* <div className='pricing'>\n          <div className='container'>\n            <h3 className='plan-name'>Animated Ads</h3>\n            <div className='grid'>\n              <div className='col-flex'>\n                <div className='what-you-get'>\n                  <h4>You'll provide:</h4>\n                  <p>x Any creative direction, brand guidelines, or restrictions.</p>\n                  <p>x Any soundtrack you'd like to use.</p>\n                  <p>x Information about specific audience that the creative will be used for.</p>\n                  <h4>You'll receive:</h4>\n                  <p>x Unique animated video.</p>\n                  <p>x Music layered for video. (if ordered)</p>\n                </div>\n              </div>\n              <div className='col-flex'>\n                <div className='what-you-pay'>\n                  <p><span className='price main'>$1,800</span></p>\n                  <p>\n                    Plus <span className='price'>%2</span> of ad-spend on the ads you receive from us, upto ${animationRewardPrice}.\n                    <br />\n                    Add <span className='price'>${animationRewardPrice}</span> if you need music.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n\n        <style jsx>{sections}</style>\n        <style>{pricing}</style>\n        <style jsx>{grid}</style>\n        <style jsx>{button}</style>\n      </section>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/Pricing/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAFA;AANA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AApCA;AAgDA;AACA;;;AAAA;;;AAGA;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAMA;AACA;;;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAAA;AAlBA;AAonLA;AAAA;AAAA;AA8QA;AAAA;AAAA;AAAA;AAAA;AA9QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmRA;;;;;;;;;;;AAtYA;AACA;AADA;;;;;;;;;;;;AAJA;AACA;AACA;AAEA;;;;;;;;;A","sourceRoot":""}